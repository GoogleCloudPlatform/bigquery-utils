# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

config {
  type: "incremental",
  schema: "raw",
  name: "sat_readings",
  uniqueKey: ["readings_hash_id", "sat_readings_hashdiff"],
  bigquery: {
    partitionBy: "DATE(readings_time)",
    clusterBy: ["source", "effective_from"]
  }
}
pre_operations {
  CREATE TABLE IF NOT EXISTS ${self()} (
      readings_hash_id STRING,
      sat_readings_hashdiff STRING,
      readings_time TIMESTAMP,
      readings FLOAT64,
      meter_id INTEGER,
      effective_from DATE,
      source STRING,
      loaddate DATE
      )
    PARTITION BY DATE(readings_time)
    CLUSTER BY source, effective_from;
}

WITH
newmeter AS (
SELECT  DISTINCT
   ${hashing.ConvertHash("readings_id")} AS readings_hash_id
  ,${hashing.ConvertHash("readings"||"readings_time")} AS sat_readings_hashdiff
  ,readings_time AS readings_time
  ,readings
  ,meter_id
  ,CAST(meter_readings.loaddate AS DATE) AS effective_from
  ,meter_readings.source
  ,CAST(meter_readings.loaddate AS DATE) AS loaddate
FROM ${ref("meter_readings_load")} AS meter_readings
),
currmeter AS ( SELECT readings_hash_id, sat_readings_hashdiff FROM ${self()} )
SELECT
  newmeter.readings_hash_id,
  newmeter.sat_readings_hashdiff,
  newmeter.readings_time,
  newmeter.readings,
  newmeter.meter_id,
  newmeter.effective_from,
  newmeter.source,
  newmeter.loaddate
FROM newmeter
LEFT JOIN currmeter
USING(readings_hash_id, sat_readings_hashdiff)
WHERE
currmeter.sat_readings_hashdiff is NULL
AND
newmeter.loaddate >= CAST(timestamp_sub(current_timestamp, INTERVAL 7 DAY)AS DATE)
