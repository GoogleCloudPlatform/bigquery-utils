config { hasOutput: true }
/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /* Implements regexp_instr/6 (haystack, needle, position, occurence, returnopt)
    // else:
    // case 'c': default
    // case 'l': not supported
    // case 'x': not supported
*/
CREATE OR REPLACE FUNCTION ${self()}(haystack STRING, regexp STRING, p INT64, o INT64, returnopt INT64, mode STRING) RETURNS INT64
LANGUAGE js
OPTIONS (
    description="""Implements regexp_instr_generic (haystack, needle, position, occurence, returnopt)."""
) AS """
  if (haystack == null || regexp == null || p == null || o == null || returnopt == null || mode == null) return null;
  p = p -1;
  o = o -1;
  var str = haystack.substring(p);
  var a;
  var r = new RegExp(regexp, mode);
  var count = 0;
  while ((a = r.exec(str)) !== null && count++ < o) {
    }
  if (a == null)
     return 0;
  if (returnopt == 0)
    return a.index+1+Number(p);
  else
    return a.index+1+Number(p)+a[0].length;
""";
