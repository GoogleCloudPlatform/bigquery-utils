config { hasOutput: true }
/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Returns all occurrences of the regular expression `regexp` in `str` starting from the `position`, returns null if either str or regexp is null. */
CREATE OR REPLACE FUNCTION ${self()}(str STRING, regexp STRING, position INT64) RETURNS ARRAY<STRING>
LANGUAGE js
OPTIONS (
    description="Returns all occurrences of the regular expression `regexp` in `str` starting from the `position`, returns null if either str or regexp is null."
)
AS """
  if (str == null || regexp == null || position == null) {
    return null;
  }
  if (position <= 0) {
    throw new Error("Position must be positive");
  }
  var r = new RegExp(regexp, 'g');
  var o = [];
  // -1 to account for `position` having 1-based indexing.
  var str_from_position = str.substring(position - 1);
  while ((a = r.exec(str_from_position)) !== null) {
    o.push(a[0]);
  }
  return o;
""";
