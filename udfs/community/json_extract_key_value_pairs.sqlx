config { hasOutput: true }
/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

CREATE OR REPLACE FUNCTION ${self()}(json_str STRING)
RETURNS ARRAY<STRUCT<key STRING, value STRING>>
LANGUAGE js 
OPTIONS(
  description = """Returns all key/values pairs in the input JSON as an array
of STRUCT<key STRING, value STRING>
Returns NULL if invalid JSON string is passed,


```sql
SELECT * FROM UNNEST(
  bqutil.fn.json_extract_key_value_pairs(
    '{"foo" : "cat", "bar": [1,2,3], "hat": {"qux": true}}'
  )
)

key,value
foo,"cat"
bar,[1,2,3]
hat,{"qux":true}
```
"""
) 
AS """
  try {
    return Object.entries(JSON.parse(json_str))
      .map(([k, v])=> Object.fromEntries([
        ["key", k],
        ["value", JSON.stringify(v)]
      ]));
  } catch {
    return null;
  }
""";
