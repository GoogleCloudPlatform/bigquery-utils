config { hasOutput: true }

/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


-- Paired (dependent samples) T-Test
-- Input:
--     pop1, array of FLOAT64, values from first group
--     pop2, array of FLOAT64, values from second group
-- Output: 
--     Struct of t_value, p_value, and dof

CREATE OR REPLACE FUNCTION ${self()}(pop1 ARRAY<FLOAT64>, pop2 ARRAY<FLOAT64>) AS ((
    WITH t1 as (
      SELECT id, val
      FROM UNNEST(pop1) as val
      WITH OFFSET AS id
      ORDER BY id
   ),
   t2 as (
      SELECT  id, val
      FROM UNNEST(pop2) as val
      WITH OFFSET AS id
      ORDER BY id
   )
   SELECT
      STRUCT(
         mean / ( std / SQRT(N) ) AS  t_value,
         N-1 AS dof,
         bqutil.fn.pvalue(mean / ( std / SQRT(N) ), n-1) AS p_value
     )
   FROM (
      SELECT
         AVG( t1.val - t2.val ) as mean,
         STDDEV_SAMP( t1.val - t2.val ) as std,
         COUNT(*) as N
      FROM t1
      INNER JOIN t2
      ON t1.id = t2.id
   )
));

