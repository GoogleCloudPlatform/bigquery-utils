config { hasOutput: true }
/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

CREATE OR REPLACE FUNCTION ${self()}(src_obj_ref_rt STRING)
RETURNS STRING
LANGUAGE python
WITH CONNECTION `${dataform.projectConfig.defaultLocation}.multimodal-udf-connection`
OPTIONS (
    entry_point="exif", 
    runtime_version="python-3.11", 
    packages=["pillow==11.2.1", "requests==2.32.4"],
    description="""Extracts EXIF data as JSON from the ObjectRef of GCS files.
Currently only supports image types.

To directly call this UDF, provide the input argument "src_obj_ref_rt" using the following:

    TO_JSON_STRING(OBJ.GET_ACCESS_URL("gs://<PATH>/<TO>/<YOUR_IMAGE_FILE>", "R"))
"""
) AS r'''

def exif(src_obj_ref_rt):
    import io
    import json

    from PIL import ExifTags, Image
    import requests
    from requests import adapters

    session = requests.Session()
    session.mount("https://", adapters.HTTPAdapter(max_retries=3))

    src_obj_ref_rt_json = json.loads(src_obj_ref_rt)

    src_url = src_obj_ref_rt_json["access_urls"]["read_url"]

    response = session.get(src_url, timeout=30)
    bts = response.content

    image = Image.open(io.BytesIO(bts))
    exif_data = image.getexif()
    exif_dict = {}
    if exif_data:
        for tag, value in exif_data.items():
            tag_name = ExifTags.TAGS.get(tag, tag)
            exif_dict[tag_name] = value

    return json.dumps(exif_dict)
''';
