query_id	query
looker_query0	WITH acs_changes_2011_2017 AS (WITH _fips AS ( SELECT state_fips_code FROM `cce-scec-10.census_utility.fips_codes_states` WHERE state_name = "Colorado"), _zip AS ( SELECT z.zip_code, z.zip_code_geom, FROM `cce-scec-10.geo_us_boundaries.zip_codes` z, _fips u WHERE z.state_fips_code = u.state_fips_code) ,acs_2011 AS ( SELECT geo_id, total_pop, median_age, households, income_per_capita, housing_units, vacant_housing_units_for_sale, owner_occupied_housing_units_lower_value_quartile, owner_occupied_housing_units_median_value, owner_occupied_housing_units_upper_value_quartile, ROUND(SAFE_DIVIDE(income_200000_or_more, households)*100, 2) AS percent_income_200000_or_more, ROUND(SAFE_DIVIDE(income_150000_199999, households)*100, 2) AS percent_income_150000_199999, ROUND(SAFE_DIVIDE(income_125000_149999, households)*100, 2) AS percent_income_125000_149999, ROUND(SAFE_DIVIDE(income_100000_124999, households)*100, 2) AS percent_income_100000_124999, ROUND(SAFE_DIVIDE(income_75000_99999, households)*100, 2) AS percent_income_75000_99999, ROUND(SAFE_DIVIDE(income_60000_74999, households)*100, 2) AS percent_income_60000_74999, ROUND(SAFE_DIVIDE(income_50000_59999, households)*100, 2) AS percent_income_50000_59999, ROUND(SAFE_DIVIDE(income_45000_49999, households)*100, 2) AS percent_income_45000_49999, ROUND(SAFE_DIVIDE(income_40000_44999, households)*100, 2) AS percent_income_40000_44999, ROUND(SAFE_DIVIDE(income_35000_39999, households)*100, 2) AS percent_income_35000_39999, ROUND(SAFE_DIVIDE(income_30000_34999, households)*100, 2) AS percent_income_30000_34999, ROUND(SAFE_DIVIDE(income_25000_29999, households)*100, 2) AS percent_income_25000_29999, ROUND(SAFE_DIVIDE(income_20000_24999, households)*100, 2) AS percent_income_20000_24999, ROUND(SAFE_DIVIDE(income_15000_19999, households)*100, 2) AS percent_income_15000_19999, ROUND(SAFE_DIVIDE(income_10000_14999, households)*100, 2) AS percent_income_10000_14999, ROUND(SAFE_DIVIDE(income_less_10000, households)*100, 2) AS percent_income_less_10000, ROUND(SAFE_DIVIDE(employed_pop, pop_16_over),4) AS rate_employment, ROUND(SAFE_DIVIDE(bachelors_degree_or_higher_25_64, pop_25_64),4)*100 AS rate_bachelors_degree_or_higher_25_64 FROM `bigquery-public-data.census_bureau_acs.zip_codes_2011_5yr` JOIN _zip ON zip_code = geo_id) ,acs_2017 AS ( SELECT geo_id, total_pop, median_age, households, income_per_capita, housing_units, vacant_housing_units_for_sale, owner_occupied_housing_units_lower_value_quartile, owner_occupied_housing_units_median_value, owner_occupied_housing_units_upper_value_quartile, ROUND(SAFE_DIVIDE(income_200000_or_more, households)*100, 2) AS percent_income_200000_or_more, ROUND(SAFE_DIVIDE(income_150000_199999, households)*100, 2) AS percent_income_150000_199999, ROUND(SAFE_DIVIDE(income_125000_149999, households)*100, 2) AS percent_income_125000_149999, ROUND(SAFE_DIVIDE(income_100000_124999, households)*100, 2) AS percent_income_100000_124999, ROUND(SAFE_DIVIDE(income_75000_99999, households)*100, 2) AS percent_income_75000_99999, ROUND(SAFE_DIVIDE(income_60000_74999, households)*100, 2) AS percent_income_60000_74999, ROUND(SAFE_DIVIDE(income_50000_59999, households)*100, 2) AS percent_income_50000_59999, ROUND(SAFE_DIVIDE(income_45000_49999, households)*100, 2) AS percent_income_45000_49999, ROUND(SAFE_DIVIDE(income_40000_44999, households)*100, 2) AS percent_income_40000_44999, ROUND(SAFE_DIVIDE(income_35000_39999, households)*100, 2) AS percent_income_35000_39999, ROUND(SAFE_DIVIDE(income_30000_34999, households)*100, 2) AS percent_income_30000_34999, ROUND(SAFE_DIVIDE(income_25000_29999, households)*100, 2) AS percent_income_25000_29999, ROUND(SAFE_DIVIDE(income_20000_24999, households)*100, 2) AS percent_income_20000_24999, ROUND(SAFE_DIVIDE(income_15000_19999, households)*100, 2) AS percent_income_15000_19999, ROUND(SAFE_DIVIDE(income_10000_14999, households)*100, 2) AS percent_income_10000_14999, ROUND(SAFE_DIVIDE(income_less_10000, households)*100, 2) AS percent_income_less_10000, ROUND(SAFE_DIVIDE(employed_pop, pop_16_over),4) AS rate_employment, ROUND(SAFE_DIVIDE(bachelors_degree_or_higher_25_64, pop_25_64),4)*100 AS rate_bachelors_degree_or_higher_25_64 FROM `bigquery-public-data.census_bureau_acs.zip_codes_2017_5yr` JOIN _zip ON zip_code = geo_id) ,acs_diff AS( SELECT CAST(acs17.geo_id as STRING) AS zip_code, ROUND(SAFE_SUBTRACT(acs17.total_pop, acs11.total_pop), 2) AS diff_total_pop, ROUND(SAFE_SUBTRACT(acs17.median_age, acs11.median_age), 2) AS diff_median_age, ROUND(SAFE_SUBTRACT(acs17.households, acs11.households), 2) AS diff_households, ROUND(SAFE_SUBTRACT(acs17.income_per_capita, acs11.income_per_capita), 2) AS diff_income_per_capita, ROUND(SAFE_SUBTRACT(acs17.housing_units, acs11.housing_units), 2) AS diff_housing_units, ROUND(SAFE_SUBTRACT(acs17.vacant_housing_units_for_sale, acs11.vacant_housing_units_for_sale), 2) AS diff_vacant_housing_units_for_sale, ROUND(SAFE_SUBTRACT(acs17. owner_occupied_housing_units_lower_value_quartile , acs11.owner_occupied_housing_units_lower_value_quartile), 2) AS diff_owner_occupied_housing_units_lower_value_quartile, ROUND(SAFE_SUBTRACT(acs17. owner_occupied_housing_units_median_value , acs11.owner_occupied_housing_units_median_value), 2) AS diff_owner_occupied_housing_units_median_value, ROUND(SAFE_SUBTRACT(acs17. owner_occupied_housing_units_upper_value_quartile , acs11.owner_occupied_housing_units_upper_value_quartile), 2) AS owner_occupied_housing_units_upper_value_quartile, ROUND(SAFE_SUBTRACT(acs17.percent_income_200000_or_more, acs11.percent_income_200000_or_more), 2) AS diff_percent_income_200000_or_more, ROUND(SAFE_SUBTRACT(acs17.percent_income_150000_199999, acs11.percent_income_150000_199999), 2) AS diff_percent_income_150000_199999, ROUND(SAFE_SUBTRACT(acs17.percent_income_125000_149999, acs11.percent_income_125000_149999), 2) AS diff_percent_income_125000_149999, ROUND(SAFE_SUBTRACT(acs17.percent_income_100000_124999, acs11.percent_income_100000_124999), 2) AS diff_percent_income_100000_124999, ROUND(SAFE_SUBTRACT(acs17.percent_income_75000_99999, acs11.percent_income_75000_99999), 2) AS diff_percent_income_75000_99999, ROUND(SAFE_SUBTRACT(acs17.percent_income_60000_74999, acs11.percent_income_60000_74999), 2) AS diff_percent_income_60000_74999, ROUND(SAFE_SUBTRACT(acs17.percent_income_50000_59999, acs11.percent_income_50000_59999), 2) AS diff_percent_income_50000_59999, ROUND(SAFE_SUBTRACT(acs17.percent_income_45000_49999, acs11.percent_income_45000_49999), 2) AS diff_percent_income_45000_49999, ROUND(SAFE_SUBTRACT(acs17.percent_income_40000_44999, acs11.percent_income_40000_44999), 2) AS diff_percent_income_40000_44999, ROUND(SAFE_SUBTRACT(acs17.percent_income_35000_39999, acs11.percent_income_35000_39999), 2) AS diff_percent_income_35000_39999, ROUND(SAFE_SUBTRACT(acs17.percent_income_30000_34999, acs11.percent_income_30000_34999), 2) AS diff_percent_income_30000_34999, ROUND(SAFE_SUBTRACT(acs17.percent_income_25000_29999, acs11.percent_income_25000_29999), 2) AS diff_percent_income_25000_29999, ROUND(SAFE_SUBTRACT(acs17.percent_income_20000_24999, acs11.percent_income_20000_24999), 2) AS diff_percent_income_20000_24999, ROUND(SAFE_SUBTRACT(acs17.percent_income_15000_19999, acs11.percent_income_15000_19999), 2) AS diff_percent_income_15000_19999, ROUND(SAFE_SUBTRACT(acs17.percent_income_10000_14999, acs11.percent_income_10000_14999), 2) AS diff_percent_income_10000_14999, ROUND(SAFE_SUBTRACT(acs17.percent_income_less_10000, acs11.percent_income_less_10000), 2) AS diff_percent_income_less_10000, ROUND(SAFE_SUBTRACT(acs17.rate_employment, acs11.rate_employment), 2) AS diff_rate_employment, ROUND(SAFE_SUBTRACT(acs17.rate_bachelors_degree_or_higher_25_64, acs11.rate_bachelors_degree_or_higher_25_64), 4) AS diff_rate_bachelors_degree_or_higher_25_64 FROM acs_2017 acs17 JOIN _zip ON zip_code = acs17.geo_id LEFT JOIN acs_2011 acs11 USING (geo_id)) SELECT * FROM acs_diff ) SELECT acs_changes_2011_2017.zip_code AS acs_changes_2011_2017_zip_code_1, AVG(acs_changes_2011_2017.diff_income_per_capita ) AS acs_changes_2011_2017_income_per_capita_1, AVG(acs_changes_2011_2017.diff_rate_bachelors_degree_or_higher_25_64 ) AS acs_changes_2011_2017_rate_bachelors_degree_or_higher_25_64 FROM acs_changes_2011_2017 GROUP BY 1 ORDER BY 2 DESC LIMIT 500
looker_query1	WITH acs_2017_zipcodes_and_banks AS (with _fips AS    (SELECT     state_fips_code    FROM     `bigquery-public-data.census_utility.fips_codes_states`    WHERE     state_name = "Colorado")  , _zip AS   (SELECT     z.zip_code   FROM   `bigquery-public-data.geo_us_boundaries.zip_codes` z   , _fips u     WHERE       z.state_fips_code = u.state_fips_code)  ,locations AS   (SELECT   COUNT(i.institution_name) AS count_locations,   l.zip_code FROM    _zip z JOIN   `bigquery-public-data.fdic_banks.locations` l USING (zip_code) JOIN   `bigquery-public-data.fdic_banks.institutions` i USING (fdic_certificate_number) WHERE   l.state IS NOT NULL   AND l.state_name IS NOT NULL   AND l.zip_code = z.zip_code GROUP BY   2)  ,acs_2017 AS (   SELECT     CAST(geo_id as STRING) AS zip_code,     total_pop,     median_age,     households,     income_per_capita,     housing_units,     vacant_housing_units_for_sale,     owner_occupied_housing_units_lower_value_quartile,     owner_occupied_housing_units_median_value,     owner_occupied_housing_units_upper_value_quartile,     ROUND(SAFE_DIVIDE(income_200000_or_more, households)*100, 2) AS percent_income_200000_or_more,     ROUND(SAFE_DIVIDE(income_150000_199999, households)*100, 2) AS percent_income_150000_199999,     ROUND(SAFE_DIVIDE(income_125000_149999, households)*100, 2) AS percent_income_125000_149999,     ROUND(SAFE_DIVIDE(income_100000_124999, households)*100, 2) AS percent_income_100000_124999,     ROUND(SAFE_DIVIDE(income_75000_99999, households)*100, 2) AS percent_income_75000_99999,     ROUND(SAFE_DIVIDE(income_60000_74999, households)*100, 2) AS percent_income_60000_74999,     ROUND(SAFE_DIVIDE(income_50000_59999, households)*100, 2) AS percent_income_50000_59999,     ROUND(SAFE_DIVIDE(income_45000_49999, households)*100, 2) AS percent_income_45000_49999,     ROUND(SAFE_DIVIDE(income_40000_44999, households)*100, 2) AS percent_income_40000_44999,     ROUND(SAFE_DIVIDE(income_35000_39999, households)*100, 2) AS percent_income_35000_39999,     ROUND(SAFE_DIVIDE(income_30000_34999, households)*100, 2) AS percent_income_30000_34999,     ROUND(SAFE_DIVIDE(income_25000_29999, households)*100, 2) AS percent_income_25000_29999,     ROUND(SAFE_DIVIDE(income_20000_24999, households)*100, 2) AS percent_income_20000_24999,     ROUND(SAFE_DIVIDE(income_15000_19999, households)*100, 2) AS percent_income_15000_19999,     ROUND(SAFE_DIVIDE(income_10000_14999, households)*100, 2) AS percent_income_10000_14999,     ROUND(SAFE_DIVIDE(income_less_10000, households)*100, 2) AS percent_income_less_10000,     ROUND(SAFE_DIVIDE(employed_pop, pop_16_over),4) AS rate_employment,     ROUND(SAFE_DIVIDE(bachelors_degree_or_higher_25_64, pop_25_64)*100,4) AS rate_bachelors_degree_or_higher_25_64   FROM     `bigquery-public-data.census_bureau_acs.zip_codes_2017_5yr`   JOIN      _zip ON geo_id = zip_code)  SELECT   z.zip_code,   l.count_locations AS locations_per_zip,   ROUND((l.count_locations /nullif(acs.total_pop,0))*10000,4) AS banks_per_10000_residents,   total_pop,   median_age,   households,   income_per_capita,   housing_units,   vacant_housing_units_for_sale,   owner_occupied_housing_units_lower_value_quartile,   owner_occupied_housing_units_median_value,   owner_occupied_housing_units_upper_value_quartile,   percent_income_200000_or_more,   percent_income_150000_199999,   percent_income_125000_149999,   percent_income_100000_124999,   percent_income_75000_99999,   percent_income_60000_74999,   percent_income_50000_59999,   percent_income_45000_49999,   percent_income_40000_44999,   percent_income_35000_39999,   percent_income_30000_34999,   percent_income_25000_29999,   percent_income_20000_24999,   percent_income_15000_19999,   percent_income_10000_14999,   percent_income_less_10000,   rate_employment,   rate_bachelors_degree_or_higher_25_64 FROM    _zip z JOIN   locations l USING (zip_code) JOIN   acs_2017 acs USING (zip_code) ORDER BY   locations_per_zip desc) SELECT   acs_2017_zipcodes_and_banks.zip_code AS acs_2017_zipcodes_and_banks_zip_code_1, AVG(acs_2017_zipcodes_and_banks.banks_per_10000_residents ) AS acs_2017_zipcodes_and_banks_banks_per_10000_residents_1 FROM acs_2017_zipcodes_and_banks  GROUP BY 1 ORDER BY 2 DESC LIMIT 500
looker_query10	WITH acs_2017_zipcodes_and_banks AS (with _fips AS    (SELECT     state_fips_code    FROM     `bigquery-public-data.census_utility.fips_codes_states`    WHERE     state_name = "Colorado")  , _zip AS   (SELECT     z.zip_code   FROM   `bigquery-public-data.geo_us_boundaries.zip_codes` z   , _fips u     WHERE       z.state_fips_code = u.state_fips_code)  ,locations AS   (SELECT   COUNT(i.institution_name) AS count_locations,   l.zip_code FROM    _zip z JOIN   `bigquery-public-data.fdic_banks.locations` l USING (zip_code) JOIN   `bigquery-public-data.fdic_banks.institutions` i USING (fdic_certificate_number) WHERE   l.state IS NOT NULL   AND l.state_name IS NOT NULL   AND l.zip_code = z.zip_code GROUP BY   2)  ,acs_2017 AS (   SELECT     CAST(geo_id as STRING) AS zip_code,     total_pop,     median_age,     households,     income_per_capita,     housing_units,     vacant_housing_units_for_sale,     owner_occupied_housing_units_lower_value_quartile,     owner_occupied_housing_units_median_value,     owner_occupied_housing_units_upper_value_quartile,     ROUND(SAFE_DIVIDE(income_200000_or_more, households)*100, 2) AS percent_income_200000_or_more,     ROUND(SAFE_DIVIDE(income_150000_199999, households)*100, 2) AS percent_income_150000_199999,     ROUND(SAFE_DIVIDE(income_125000_149999, households)*100, 2) AS percent_income_125000_149999,     ROUND(SAFE_DIVIDE(income_100000_124999, households)*100, 2) AS percent_income_100000_124999,     ROUND(SAFE_DIVIDE(income_75000_99999, households)*100, 2) AS percent_income_75000_99999,     ROUND(SAFE_DIVIDE(income_60000_74999, households)*100, 2) AS percent_income_60000_74999,     ROUND(SAFE_DIVIDE(income_50000_59999, households)*100, 2) AS percent_income_50000_59999,     ROUND(SAFE_DIVIDE(income_45000_49999, households)*100, 2) AS percent_income_45000_49999,     ROUND(SAFE_DIVIDE(income_40000_44999, households)*100, 2) AS percent_income_40000_44999,     ROUND(SAFE_DIVIDE(income_35000_39999, households)*100, 2) AS percent_income_35000_39999,     ROUND(SAFE_DIVIDE(income_30000_34999, households)*100, 2) AS percent_income_30000_34999,     ROUND(SAFE_DIVIDE(income_25000_29999, households)*100, 2) AS percent_income_25000_29999,     ROUND(SAFE_DIVIDE(income_20000_24999, households)*100, 2) AS percent_income_20000_24999,     ROUND(SAFE_DIVIDE(income_15000_19999, households)*100, 2) AS percent_income_15000_19999,     ROUND(SAFE_DIVIDE(income_10000_14999, households)*100, 2) AS percent_income_10000_14999,     ROUND(SAFE_DIVIDE(income_less_10000, households)*100, 2) AS percent_income_less_10000,     ROUND(SAFE_DIVIDE(employed_pop, pop_16_over),4) AS rate_employment,     ROUND(SAFE_DIVIDE(bachelors_degree_or_higher_25_64, pop_25_64)*100,4) AS rate_bachelors_degree_or_higher_25_64   FROM     `bigquery-public-data.census_bureau_acs.zip_codes_2017_5yr`   JOIN      _zip ON geo_id = zip_code)  SELECT   z.zip_code,   l.count_locations AS locations_per_zip,   ROUND((l.count_locations /nullif(acs.total_pop,0))*10000,4) AS banks_per_10000_residents,   total_pop,   median_age,   households,   income_per_capita,   housing_units,   vacant_housing_units_for_sale,   owner_occupied_housing_units_lower_value_quartile,   owner_occupied_housing_units_median_value,   owner_occupied_housing_units_upper_value_quartile,   percent_income_200000_or_more,   percent_income_150000_199999,   percent_income_125000_149999,   percent_income_100000_124999,   percent_income_75000_99999,   percent_income_60000_74999,   percent_income_50000_59999,   percent_income_45000_49999,   percent_income_40000_44999,   percent_income_35000_39999,   percent_income_30000_34999,   percent_income_25000_29999,   percent_income_20000_24999,   percent_income_15000_19999,   percent_income_10000_14999,   percent_income_less_10000,   rate_employment,   rate_bachelors_degree_or_higher_25_64 FROM    _zip z JOIN   locations l USING (zip_code) JOIN   acs_2017 acs USING (zip_code) ORDER BY   locations_per_zip desc) SELECT  acs_2017_zipcodes_and_banks.zip_code AS acs_2017_zipcodes_and_banks_zip_code_1, AVG(acs_2017_zipcodes_and_banks.owner_occupied_housing_units_lower_value_quartile ) AS acs_2017_zipcodes_and_banks_owner_occupied_housing_units_lower_value_quartile, AVG(acs_2017_zipcodes_and_banks.owner_occupied_housing_units_median_value ) AS acs_2017_zipcodes_and_banks_owner_occupied_housing_units_median_value, AVG(acs_2017_zipcodes_and_banks.owner_occupied_housing_units_upper_value_quartile ) AS acs_2017_zipcodes_and_banks_owner_occupied_housing_units_upper_value_quartile FROM acs_2017_zipcodes_and_banks  GROUP BY 1 ORDER BY 2 DESC LIMIT 500
looker_query11	WITH acs_2017_zipcodes AS (WITH    _fips AS (   SELECT     state_fips_code   FROM     `bigquery-public-data.census_utility.fips_codes_states`   WHERE     state_name = "Colorado"),     _zip AS (   SELECT     z.zip_code,     z.zip_code_geom,   FROM     `bigquery-public-data.geo_us_boundaries.zip_codes` z,      _fips u   WHERE     z.state_fips_code = u.state_fips_code)  ,acs_2017 AS (   SELECT     CAST(geo_id as STRING) AS zip_code,     total_pop,     median_age,     households,     income_per_capita,     housing_units,     vacant_housing_units_for_sale,     owner_occupied_housing_units_lower_value_quartile,     owner_occupied_housing_units_median_value,     owner_occupied_housing_units_upper_value_quartile,     ROUND(SAFE_DIVIDE(income_200000_or_more, households)*100, 2) AS percent_income_200000_or_more,     ROUND(SAFE_DIVIDE(income_150000_199999, households)*100, 2) AS percent_income_150000_199999,     ROUND(SAFE_DIVIDE(income_125000_149999, households)*100, 2) AS percent_income_125000_149999,     ROUND(SAFE_DIVIDE(income_100000_124999, households)*100, 2) AS percent_income_100000_124999,     ROUND(SAFE_DIVIDE(income_75000_99999, households)*100, 2) AS percent_income_75000_99999,     ROUND(SAFE_DIVIDE(income_60000_74999, households)*100, 2) AS percent_income_60000_74999,     ROUND(SAFE_DIVIDE(income_50000_59999, households)*100, 2) AS percent_income_50000_59999,     ROUND(SAFE_DIVIDE(income_45000_49999, households)*100, 2) AS percent_income_45000_49999,     ROUND(SAFE_DIVIDE(income_40000_44999, households)*100, 2) AS percent_income_40000_44999,     ROUND(SAFE_DIVIDE(income_35000_39999, households)*100, 2) AS percent_income_35000_39999,     ROUND(SAFE_DIVIDE(income_30000_34999, households)*100, 2) AS percent_income_30000_34999,     ROUND(SAFE_DIVIDE(income_25000_29999, households)*100, 2) AS percent_income_25000_29999,     ROUND(SAFE_DIVIDE(income_20000_24999, households)*100, 2) AS percent_income_20000_24999,     ROUND(SAFE_DIVIDE(income_15000_19999, households)*100, 2) AS percent_income_15000_19999,     ROUND(SAFE_DIVIDE(income_10000_14999, households)*100, 2) AS percent_income_10000_14999,     ROUND(SAFE_DIVIDE(income_less_10000, households)*100, 2) AS percent_income_less_10000,     ROUND(SAFE_DIVIDE(employed_pop, pop_16_over),4) AS rate_employment,     ROUND(SAFE_DIVIDE(bachelors_degree_or_higher_25_64, pop_25_64),4)*100 AS rate_bachelors_degree_or_higher_25_64   FROM     `bigquery-public-data.census_bureau_acs.zip_codes_2017_5yr`   JOIN      _zip ON geo_id = zip_code)  SELECT   * FROM   acs_2017        ) SELECT  AVG(acs_2017_zipcodes.percent_income_15000_19999 ) AS acs_2017_zipcodes_percent_income_15000_19999, AVG(acs_2017_zipcodes.percent_income_20000_24999 ) AS acs_2017_zipcodes_percent_income_20000_24999, AVG(acs_2017_zipcodes.percent_income_25000_29999 ) AS acs_2017_zipcodes_percent_income_25000_29999, AVG(acs_2017_zipcodes.percent_income_30000_34999 ) AS acs_2017_zipcodes_percent_income_30000_34999, AVG(acs_2017_zipcodes.percent_income_35000_39999 ) AS acs_2017_zipcodes_percent_income_35000_39999, AVG(acs_2017_zipcodes.percent_income_40000_44999 ) AS acs_2017_zipcodes_percent_income_40000_44999, AVG(acs_2017_zipcodes.percent_income_45000_49999 ) AS acs_2017_zipcodes_percent_income_45000_49999, AVG(acs_2017_zipcodes.percent_income_50000_59999 ) AS acs_2017_zipcodes_percent_income_50000_59999, AVG(acs_2017_zipcodes.percent_income_60000_74999 ) AS acs_2017_zipcodes_percent_income_60000_74999, AVG(acs_2017_zipcodes.percent_income_75000_99999 ) AS acs_2017_zipcodes_percent_income_75000_99999, AVG(acs_2017_zipcodes.percent_income_100000_124999 ) AS acs_2017_zipcodes_percent_income_100000_124999, AVG(acs_2017_zipcodes.percent_income_125000_149999 ) AS acs_2017_zipcodes_percent_income_125000_149999, AVG(acs_2017_zipcodes.percent_income_150000_199999 ) AS acs_2017_zipcodes_percent_income_150000_199999, AVG(acs_2017_zipcodes.percent_income_200000_or_more ) AS acs_2017_zipcodes_percent_income_200000_or_more_1 FROM acs_2017_zipcodes  LIMIT 500
prolific_users	SELECT username, COUNT(*) AS c FROM `bigquery-public-data.geo_openstreetmap.planet_relations` AS relations GROUP BY username ORDER BY c DESC LIMIT 10
fire_hydrants	SELECT id, version, all_tags FROM `bigquery-public-data.geo_openstreetmap.history_nodes` AS node JOIN UNNEST(all_tags) AS tags WHERE (tags.key = 'emergency' AND tags.value = 'fire_hydrant') AND id NOT IN ( SELECT id FROM `bigquery-public-data.geo_openstreetmap.planet_nodes` AS node JOIN UNNEST(all_tags) AS tags WHERE (tags.key = 'emergency' AND tags.value = 'fire_hydrant') )
singapore_edits	WITH singapore AS ( SELECT ST_MAKEPOLYGON(ST_MAKELINE( [ST_GEOGPOINT(103.6920359,1.1304753),ST_GEOGPOINT(104.0120359,1.1304753), ST_GEOGPOINT(104.0120359,1.4504753),ST_GEOGPOINT(103.6920359,1.4504753) ])) AS boundingbox) SELECT DISTINCT changeset.id FROM `bigquery-public-data.geo_openstreetmap.history_changesets` AS changeset JOIN UNNEST(nodes) AS cnode, `bigquery-public-data.geo_openstreetmap.history_nodes` AS nodes, singapore WHERE cnode = nodes.id AND ST_INTERSECTS(singapore.boundingbox, nodes.geometry)
never_happens	SELECT SUM(copies) FROM `bigquery-public-data.github_repos.sample_contents` WHERE NOT binary AND REGEXP_CONTAINS(content, r'This should never happen')
